{"version":3,"sources":["services/authService.js","components/NavigationBar.js","components/Home.js","components/Login.js","components/Register.js","components/UserDashboard.js","components/AdminDashboard.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","axios","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","authService","register","async","response","post","userData","data","setItem","role","login","credentials","logout","removeItem","isAuthenticated","getUserRole","getUserProfile","get","getAdminDashboard","NavigationBar","navigate","useNavigate","userRole","React","createElement","Navbar","bg","variant","expand","Container","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","className","Fragment","Button","onClick","handleLogout","Home","Row","Col","md","Card","Header","Body","Title","Text","Footer","Login","setCredentials","useState","username","password","setError","loading","setLoading","handleChange","e","name","value","target","Alert","Form","onSubmit","preventDefault","console","log","err","_err$response","_err$response$data","message","Group","Label","Control","type","placeholder","onChange","required","disabled","Register","setUserData","firstname","lastname","country","Select","UserDashboard","profile","setProfile","useEffect","fetchUserProfile","AdminDashboard","dashboardData","setDashboardData","fetchAdminDashboard","Table","striped","bordered","hover","responsive","lastLogin","map","user","key","ProtectedRoute","_ref","element","requiredRole","Navigate","App","Router","Routes","Route","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.33047dab.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'https://despliegue-autenticacion.onrender.com';\r\n\r\n// Configurar interceptor para incluir el token en las peticiones\r\naxios.interceptors.request.use(\r\n  config => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Servicio de autenticación\r\nconst authService = {\r\n  // Registro de usuario\r\n  register: async (userData) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/auth/register`, userData);\r\n      if (response.data.token) {\r\n        localStorage.setItem('token', response.data.token);\r\n        localStorage.setItem('role', response.data.role);\r\n      }\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n  // Login de usuario\r\n  login: async (credentials) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/auth/login`, credentials);\r\n      if (response.data.token) {\r\n        localStorage.setItem('token', response.data.token);\r\n        localStorage.setItem('role', response.data.role);\r\n      }\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Logout de usuario\r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('role');\r\n  },\r\n\r\n  // Verificar si el usuario está autenticado\r\n  isAuthenticated: () => {\r\n    return localStorage.getItem('token') !== null;\r\n  },\r\n\r\n  // Obtener el rol del usuario actual\r\n  getUserRole: () => {\r\n    return localStorage.getItem('role');\r\n  },\r\n\r\n  // Obtener información del perfil de usuario\r\n  getUserProfile: async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/user/profile`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener información del panel de administración\r\n  getAdminDashboard: async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/admin/dashboard`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default authService;","import React from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { Navbar, Nav, Container, Button } from 'react-bootstrap';\r\nimport authService from '../services/authService';\r\n\r\nconst NavigationBar = () => {\r\n  const navigate = useNavigate();\r\n  const isAuthenticated = authService.isAuthenticated();\r\n  const userRole = authService.getUserRole();\r\n\r\n  const handleLogout = () => {\r\n    authService.logout();\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n      <Container>\r\n        <Navbar.Brand as={Link} to=\"/\">JWT Auth Demo</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n            {isAuthenticated ? (\r\n              <>\r\n                {userRole === 'USER' && (\r\n                  <Nav.Link as={Link} to=\"/user/profile\">Mi Perfil</Nav.Link>\r\n                )}\r\n                {userRole === 'ADMIN' && (\r\n                  <Nav.Link as={Link} to=\"/admin/dashboard\">Panel Admin</Nav.Link>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Nav.Link as={Link} to=\"/login\">Login</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/register\">Registro</Nav.Link>\r\n              </>\r\n            )}\r\n          </Nav>\r\n          {isAuthenticated && (\r\n            <Button variant=\"outline-light\" onClick={handleLogout}>\r\n              Cerrar Sesión\r\n            </Button>\r\n          )}\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;","import React from 'react';\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport authService from '../services/authService';\r\n\r\nconst Home = () => {\r\n  const isAuthenticated = authService.isAuthenticated();\r\n  const userRole = authService.getUserRole();\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={8}>\r\n          <Card className=\"text-center shadow\">\r\n            <Card.Header as=\"h2\">Sistema de Autenticación JWT</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>Bienvenido a la demostración de JWT</Card.Title>\r\n              <Card.Text>\r\n                Esta aplicación demuestra la implementación de autenticación basada en JWT con Spring Boot y React.\r\n                {isAuthenticated ? (\r\n                  <p className=\"mt-3\">\r\n                    Estás autenticado como: <strong>{userRole}</strong>\r\n                  </p>\r\n                ) : (\r\n                  <p className=\"mt-3\">\r\n                    Por favor, inicia sesión o regístrate para acceder a las funciones protegidas.\r\n                  </p>\r\n                )}\r\n              </Card.Text>\r\n              {!isAuthenticated ? (\r\n                <div className=\"d-flex justify-content-center gap-2\">\r\n                  <Button as={Link} to=\"/login\" variant=\"primary\">Iniciar Sesión</Button>\r\n                  <Button as={Link} to=\"/register\" variant=\"success\">Registrarse</Button>\r\n                </div>\r\n              ) : userRole === 'USER' ? (\r\n                <Button as={Link} to=\"/user/profile\" variant=\"info\">Ir a Mi Perfil</Button>\r\n              ) : (\r\n                <Button as={Link} to=\"/admin/dashboard\" variant=\"danger\">Ir al Panel de Administrador</Button>\r\n              )}\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted\">\r\n              JWT Authentication Demo\r\n            </Card.Footer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { Container, Row, Col, Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport authService from '../services/authService';\r\n\r\nconst Login = () => {\r\n  const [credentials, setCredentials] = useState({\r\n    username: '',\r\n    password: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCredentials({\r\n      ...credentials,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await authService.login(credentials);\r\n      console.log('Login successful:', response);\r\n      \r\n      // Redirigir según el rol\r\n      if (response.role === 'ADMIN') {\r\n        navigate('/admin/dashboard');\r\n      } else {\r\n        navigate('/user/profile');\r\n      }\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      setError(err.response?.data?.message || 'Error al iniciar sesión. Comprueba tus credenciales.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={6}>\r\n          <Card className=\"shadow\">\r\n            <Card.Header as=\"h3\" className=\"text-center\">Iniciar Sesión</Card.Header>\r\n            <Card.Body>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Nombre de usuario</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"Ingrese su nombre de usuario\"\r\n                    value={credentials.username}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Contraseña</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Ingrese su contraseña\"\r\n                    value={credentials.password}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n\r\n                <div className=\"d-grid gap-2\">\r\n                  <Button variant=\"primary\" type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Iniciando sesión...' : 'Iniciar Sesión'}\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-center\">\r\n              ¿No tienes cuenta? <Link to=\"/register\">Regístrate aquí</Link>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport { Container, Row, Col, Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport authService from '../services/authService';\r\n\r\nconst Register = () => {\r\n  const [userData, setUserData] = useState({\r\n    username: '',\r\n    password: '',\r\n    firstname: '',\r\n    lastname: '',\r\n    country: '',\r\n    role: 'USER' // Por defecto, el rol es USER\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData({\r\n      ...userData,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await authService.register(userData);\r\n      console.log('Registration successful:', response);\r\n      \r\n      // Redirigir según el rol\r\n      if (response.role === 'ADMIN') {\r\n        navigate('/admin/dashboard');\r\n      } else {\r\n        navigate('/user/profile');\r\n      }\r\n    } catch (err) {\r\n      console.error('Registration error:', err);\r\n      setError(err.response?.data?.message || 'Error al registrarse. Intente con otro nombre de usuario.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={6}>\r\n          <Card className=\"shadow\">\r\n            <Card.Header as=\"h3\" className=\"text-center\">Registrarse</Card.Header>\r\n            <Card.Body>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Nombre de usuario</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"Elija un nombre de usuario\"\r\n                    value={userData.username}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Contraseña</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Elija una contraseña\"\r\n                    value={userData.password}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label>Nombre</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"firstname\"\r\n                        placeholder=\"Ingrese su nombre\"\r\n                        value={userData.firstname}\r\n                        onChange={handleChange}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label>Apellido</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"lastname\"\r\n                        placeholder=\"Ingrese su apellido\"\r\n                        value={userData.lastname}\r\n                        onChange={handleChange}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>País</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"country\"\r\n                    placeholder=\"Ingrese su país\"\r\n                    value={userData.country}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Rol</Form.Label>\r\n                  <Form.Select \r\n                    name=\"role\" \r\n                    value={userData.role}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value=\"USER\">Usuario</option>\r\n                    <option value=\"ADMIN\">Administrador</option>\r\n                  </Form.Select>\r\n                  <Form.Text className=\"text-muted\">\r\n                    En un entorno real, la asignación de roles debería ser manejada por administradores.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n\r\n                <div className=\"d-grid gap-2\">\r\n                  <Button variant=\"success\" type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Registrando...' : 'Registrarse'}\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-center\">\r\n              ¿Ya tienes cuenta? <Link to=\"/login\">Inicia sesión aquí</Link>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;","import React, { useState, useEffect } from 'react';\r\nimport { Container, Card, Alert } from 'react-bootstrap';\r\nimport authService from '../services/authService';\r\n\r\nconst UserDashboard = () => {\r\n  const [profile, setProfile] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchUserProfile = async () => {\r\n      try {\r\n        const data = await authService.getUserProfile();\r\n        setProfile(data);\r\n      } catch (err) {\r\n        console.error('Error fetching user profile:', err);\r\n        setError('No se pudo cargar la información del perfil. Por favor, intente nuevamente.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserProfile();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container className=\"mt-5 text-center\">\r\n        <p>Cargando perfil de usuario...</p>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Card className=\"shadow\">\r\n        <Card.Header as=\"h3\" className=\"text-center\">Mi Perfil de Usuario</Card.Header>\r\n        <Card.Body>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {!error && (\r\n            <div>\r\n              <p className=\"lead\">{profile}</p>\r\n              <hr />\r\n              <p>Este es tu perfil de usuario. Desde aquí podrías:</p>\r\n              <ul>\r\n                <li>Ver y editar tu información personal</li>\r\n                <li>Cambiar tu contraseña</li>\r\n                <li>Gestionar tus preferencias</li>\r\n                <li>Ver tu historial de actividad</li>\r\n              </ul>\r\n              <p className=\"text-muted\">\r\n                <small>\r\n                  Estas funcionalidades son ejemplos y no están implementadas\r\n                  completamente en este demo.\r\n                </small>\r\n              </p>\r\n            </div>\r\n          )}\r\n        </Card.Body>\r\n        <Card.Footer className=\"text-muted text-center\">\r\n          Perfil de Usuario - JWT Auth Demo\r\n        </Card.Footer>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;","import React, { useState, useEffect } from 'react';\r\nimport { Container, Card, Alert, Row, Col, Table } from 'react-bootstrap';\r\nimport authService from '../services/authService';\r\n\r\nconst AdminDashboard = () => {\r\n  const [dashboardData, setDashboardData] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Datos simulados para la tabla de usuarios\r\n  const mockUsers = [\r\n    { id: 1, username: 'user1', role: 'USER', lastLogin: '2025-03-20 14:30' },\r\n    { id: 2, username: 'admin1', role: 'ADMIN', lastLogin: '2025-03-23 09:15' },\r\n    { id: 3, username: 'user2', role: 'USER', lastLogin: '2025-03-22 11:45' },\r\n    { id: 4, username: 'user3', role: 'USER', lastLogin: '2025-03-19 16:20' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const fetchAdminDashboard = async () => {\r\n      try {\r\n        const data = await authService.getAdminDashboard();\r\n        setDashboardData(data);\r\n      } catch (err) {\r\n        console.error('Error fetching admin dashboard:', err);\r\n        setError('No se pudo cargar la información del panel. Por favor, intente nuevamente.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAdminDashboard();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container className=\"mt-5 text-center\">\r\n        <p>Cargando panel de administración...</p>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <h2 className=\"mb-4 text-center\">Panel de Administración</h2>\r\n      \r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n      \r\n      <Row>\r\n        <Col md={12} className=\"mb-4\">\r\n          <Card className=\"shadow\">\r\n            <Card.Header as=\"h5\">Mensaje de Bienvenida</Card.Header>\r\n            <Card.Body>\r\n              <p className=\"lead\">{dashboardData}</p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      \r\n      <Row className=\"mb-4\">\r\n        <Col md={4}>\r\n          <Card className=\"shadow text-center\">\r\n            <Card.Body>\r\n              <h3>4</h3>\r\n              <p>Total Usuarios</p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card className=\"shadow text-center bg-info text-white\">\r\n            <Card.Body>\r\n              <h3>3</h3>\r\n              <p>Usuarios Activos</p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card className=\"shadow text-center bg-warning text-white\">\r\n            <Card.Body>\r\n              <h3>1</h3>\r\n              <p>Administradores</p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      \r\n      <Card className=\"shadow mb-4\">\r\n        <Card.Header as=\"h5\">Lista de Usuarios</Card.Header>\r\n        <Card.Body>\r\n          <Table striped bordered hover responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Usuario</th>\r\n                <th>Rol</th>\r\n                <th>Último Acceso</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {mockUsers.map(user => (\r\n                <tr key={user.id}>\r\n                  <td>{user.id}</td>\r\n                  <td>{user.username}</td>\r\n                  <td>\r\n                    <span className={user.role === 'ADMIN' ? 'text-danger' : 'text-success'}>\r\n                      {user.role}\r\n                    </span>\r\n                  </td>\r\n                  <td>{user.lastLogin}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <p className=\"text-muted\">\r\n            <small>Nota: Esta es una tabla con datos simulados para este demo.</small>\r\n          </p>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      <Card className=\"shadow\">\r\n        <Card.Header as=\"h5\">Funcionalidades de Administración</Card.Header>\r\n        <Card.Body>\r\n          <p>Desde este panel podrías:</p>\r\n          <ul>\r\n            <li>Gestionar usuarios (crear, editar, eliminar)</li>\r\n            <li>Asignar roles y permisos</li>\r\n            <li>Monitorear la actividad del sistema</li>\r\n            <li>Configurar parámetros de seguridad</li>\r\n          </ul>\r\n          <p className=\"text-muted\">\r\n            <small>\r\n              Estas funcionalidades son ejemplos y no están implementadas\r\n              completamente en este demo.\r\n            </small>\r\n          </p>\r\n        </Card.Body>\r\n        <Card.Footer className=\"text-muted text-center\">\r\n          Panel de Administrador - JWT Auth Demo\r\n        </Card.Footer>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;","import React from 'react';\nimport { HashRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// Componentes\nimport NavigationBar from './components/NavigationBar';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport UserDashboard from './components/UserDashboard';\nimport AdminDashboard from './components/AdminDashboard';\n\n// Servicio de autenticación\nimport authService from './services/authService';\n\n// Componente para proteger rutas\nconst ProtectedRoute = ({ element, requiredRole }) => {\n  const isAuthenticated = authService.isAuthenticated();\n  const userRole = authService.getUserRole();\n\n  // Si no está autenticado, redirigir a login\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  // Si se requiere un rol específico y el usuario no lo tiene, redirigir a home\n  if (requiredRole && userRole !== requiredRole) {\n    return <Navigate to=\"/\" />;\n  }\n\n  // Si todo está bien, mostrar el componente\n  return element;\n};\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavigationBar />\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n          \n          {/* Rutas protegidas */}\n          <Route \n            path=\"/user/profile\" \n            element={<ProtectedRoute element={<UserDashboard />} requiredRole=\"USER\" />} \n          />\n          <Route \n            path=\"/admin/dashboard\" \n            element={<ProtectedRoute element={<AdminDashboard />} requiredRole=\"ADMIN\" />} \n          />\n          \n          {/* Ruta por defecto */}\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}